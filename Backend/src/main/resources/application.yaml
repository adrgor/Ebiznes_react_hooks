spring:
  datasource:
    url: jdbc:mysql://localhost:3307/ebiznes?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 1063011598498-u0piboefntjejmt12tvu70cdrtf9vh9g.apps.googleusercontent.com
            clientSecret: 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
#            redirectUri: "http://localhost:8080/oauth2/callback/google"
            scope:
              - email
              - profile
          github:
            clientId: b22952d2d6eaaa8b53a0
            clientSecret: 126a33d956b3d91b25a9182bb6e9cea01e1446c0
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
  app:
    auth:
      tokenSecret: 2D4A614E645267556B58703272357538782F413F4428472B4B6250655368566D5971337436763979244226452948404D635166546A576E5A7234753778217A25
      tokenExpirationMsec: 864000000
    cors:
      allowedOrigins: http://localhost:3000 # Comma separated list of allowed origins
#    oauth2:
#      # After successfully authenticating with the OAuth2 Provider,
#      # we'll be generating an auth token for the user and sending the token to the
#      # redirectUri mentioned by the client in the /oauth2/authorize request.
#      # We're not using cookies because they won't work well in mobile clients.
#      authorizedRedirectUris:
#        - http://localhost:3000/oauth2/redirect